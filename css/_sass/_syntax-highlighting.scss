@charset "utf-8";

/**
 * Code formatting
 */
pre,
code {
    font-size: 15px;
    border: 1px solid $grey-color-light;
    border-radius: 3px;
}

code {
    padding: 1px 5px;
}

pre {
    padding: 8px 12px;
    overflow-x: auto;
    background-color: #000000;

    > code {
        border: 0;
        padding-right: 0;
        padding-left: 0;
    }
}


/**
 * Syntax highlighting styles
 */
.highlight {
    margin-bottom: 15px;
    overflow: auto;

    pre {
        max-height: 600px;
        overflow: auto;
    }

    // shell color
    .language-shell{
        color: #ffbc00;
    }

    .language-byte{
        color: #9bb4ce;
    }

    .highlighter-rouge & {
      background: #eef;
    }

    .c     { color: #998; font-style: italic } // Comment
    .err   { color: #a61717 } // Error
    .cm    { color: #998; font-style: italic } // Comment.Multiline
    .cp    { color: #999; font-weight: bold } // Comment.Preproc
    .c1    { color: #998 } // Comment.Single
    .cs    { color: #999; font-weight: bold; font-style: italic } // Comment.Special
    .gd    { color: #000; background-color: #fdd } // Generic.Deleted
    .gd .x { color: #000; background-color: #faa } // Generic.Deleted.Specific
    .ge    { font-style: italic } // Generic.Emph
    .gr    { color: #a00 } // Generic.Error
    .gh    { color: #999 } // Generic.Heading
    .gi    { color: #000; background-color: #dfd } // Generic.Inserted
    .gi .x { color: #000; background-color: #afa } // Generic.Inserted.Specific
    .go    { color: #888 } // Generic.Output
    .gp    { color: #555 } // Generic.Prompt
    .gs    { font-weight: bold } // Generic.Strong
    .gu    { color: #aaa } // Generic.Subheading
    .gt    { color: #a00 } // Generic.Traceback
    .k     { font-weight: bold; color: #bb5908 } //
    .kn    { font-weight: bold; color: #bb5908 } //
    .kc    { color:#8A8A8A } // Keyword.Constant
    .kd    { font-weight: bold; color: #bb5908  } // Keyword.Declaration: public,private...
    .kp    { font-weight: bold} // Keyword.Pseudo
    .kr    { font-weight: bold } // Keyword.Reserved
    .kt    { color: #bb5908; font-weight: bold } // Keyword.Type
    .m     { color: #099 } // Literal.Number
    .s     { color: #2529c3 } // Literal.String
    .n     { color: #9bb4ce } //
    .na    { color: #4cd405 } // Name.Attribute
    .nb    { color: #0086B3 } // Name.Builtin
    .nc    { color: #9bb4ce; font-weight: bold } // Name.Class
    .no    { color: #4cd405 } // Name.Constant
    .ni    { color: #800080 } // Name.Entity
    .nd    { color: #BBB529} // Annotation.
    .ne    { color: #900; font-weight: bold } // Name.Exception
    .nf    { color: #d60202; font-weight: bold } // Name.Function
    .nl    { color: #9bb4ce } //
    .nn    { color: #AF891A } // Name.Namespace
    .nt    { color: #000080 } // Name.Tag
    .nv    { color: #4cd405 } // Name.Variable
    .o     { color: #9bb4ce; } // Operator
    .ow    { font-weight: bold } // Operator.Word
    .p     { color: #9bb4ce } //
    .w     { color: #bbb } // Text.Whitespace
    .mf    { color: #099 } // Literal.Number.Float
    .mh    { color: #099 } // Literal.Number.Hex
    .mi    { color: #099 } // Literal.Number.Integer
    .mo    { color: #099 } // Literal.Number.Oct
    .sb    { color: #2529c3 } // Literal.String.Backtick
    .sc    { color: #2529c3 } // Literal.String.Char
    .sd    { color: #2529c3 } // Literal.String.Doc
    .s2    { color: #2529c3 } // Literal.String.Double
    .se    { color: #2529c3 } // Literal.String.Escape
    .sh    { color: #2529c3 } // Literal.String.Heredoc
    .si    { color: #2529c3 } // Literal.String.Interpol
    .sx    { color: #2529c3 } // Literal.String.Other
    .sr    { color: #009926 } // Literal.String.Regex
    .s1    { color: #2529c3 } // Literal.String.Single
    .ss    { color: #990073 } // Literal.String.Symbol
    .bp    { color: #999 } // Name.Builtin.Pseudo
    .vc    { color: #4cd405 } // Name.Variable.Class
    .vg    { color: #4cd405 } // Name.Variable.Global
    .vi    { color: #4cd405 } // Name.Variable.Instance
    .il    { color: #099 } // Literal.Number.Integer.Long
}
